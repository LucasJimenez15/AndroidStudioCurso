<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:showIn="@layout/activity_main"
    tools:context=".MainActivity">

    <!--
        Este LinearLayout es el contenedor raÃ­z del layout.
        Se usa para organizar elementos en una sola columna (por eso es vertical).
        match_parent en ancho y alto significa que va a ocupar todo el espacio disponible de la pantalla.

        Antes era comÃºn usar RelativeLayout, pero era mÃ¡s difÃ­cil de mantener con muchos elementos.
        LinearLayout es mÃ¡s simple y claro cuando el diseÃ±o es vertical y directo.
    -->

    <androidx.recyclerview.widget.RecyclerView
        android:id="@+id/rv"
        android:scrollbars="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior"/>

    <!--
        Este es el RecyclerView, el componente moderno para mostrar listas.
        ðŸ”¹ android:id="@+id/rv": define un ID para poder encontrarlo en el cÃ³digo Java.
        ðŸ”¹ android:scrollbars="vertical": activa la barra de scroll vertical.
        ðŸ”¹ match_parent: ocupa todo el espacio disponible del LinearLayout.
        ðŸ”¹ app:layout_behavior: le dice cÃ³mo comportarse cuando se hace scroll con el AppBar (Toolbar).
           Esto permite que la barra se oculte y reaparezca segÃºn el scroll.

        Â¿Por quÃ© se usa RecyclerView y no ListView?
        âœ… RecyclerView es mÃ¡s rÃ¡pido y flexible.
        âœ… Usa un patrÃ³n llamado ViewHolder que mejora mucho el rendimiento.
        âœ… Permite mÃ¡s tipos de diseÃ±o (listado, grilla, etc.) con diferentes LayoutManagers.
        âœ… Se pueden aplicar animaciones fÃ¡cilmente con ItemAnimator.

        ListView era mÃ¡s limitado: no soportaba bien animaciones, era mÃ¡s lento con muchos datos,
        y requerÃ­a mÃ¡s cÃ³digo para personalizar cada Ã­tem.
    -->

</LinearLayout>
