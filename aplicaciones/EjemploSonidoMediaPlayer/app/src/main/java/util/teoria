.ogg es un formato de audio comprimido libre de patentes no como mp3 que si tiene due√±os en cambio este no tiene licencias, m√°s liviano que el MP3 y con buena calidad. Android lo soporta nativamente, por eso se usa mucho para efectos de sonido o m√∫sica en apps. Se coloca en la carpeta res/raw/ con nombres en min√∫sculas y sin espacios. Para reproducirlo se usa MediaPlayer.create(context, R.raw.sonido).start();. todas las recomendacion de audio y estos formatos se usan tamien en tecnologiass como ios ya que es un formato, este es un formato que puede ser tanto de audio como de video

el directorio raw se crea por nosotros y es donde se guarda todo el contenido multimedia

tambien normalmente nosotros nos centraremos mas en descomprimir estos archivos de audio ya que ese sera nuestro trabajo
----------------------------------------------------------------------------------------------

MP3 (MPEG-1 Audio Layer III) es un formato de ""compresi√≥n"" de audio con p√©rdida, lo que significa que elimina partes del sonido que el o√≠do humano no percibe f√°cilmente, para reducir el tama√±o del archivo. normalmente acorta o reduce los humbrales mas altos de un sonido o cancion y tambien los humrales mas bajos que no escucha ya algunos humanos.

üéß Compresi√≥n con p√©rdida: descarta datos menos perceptibles (como sonidos muy bajos en presencia de otros).
üì¶ Codificaci√≥n por cuadros: divide el audio en bloques (frames), cada uno con datos comprimidos m√°s encabezados.
üß† Psicoac√∫stica: usa modelos que imitan c√≥mo escuchamos, para decidir qu√© datos eliminar.
üìÑ Sin metadatos visibles: pero puede incluir etiquetas ID3 (t√≠tulo, artista, etc.).
üîÑ Bitrate: puede ser constante (CBR) o variable (VBR). Ej: 128 kbps, 192 kbps, 320 kbps.

En resumen: MP3 reduce el tama√±o del audio manteniendo buena calidad, gracias a un algoritmo es decir el algoritmo MP3 lo que elimina informaci√≥n sonora que normalmente no notamos. Ideal para m√∫sica y ampliamente compatible.

--------------------------------------------------------------------------------------------

En Android, los sonidos se usan com√∫nmente para efectos, notificaciones o m√∫sica de fondo. Hay dos formas principales de manejarlos o separarlos dependiendo en la duracion de estos ya que estos podrian sobreescribirse si no es el caso o esperar a que termine uno para poder reproduci otro: MediaPlayer y SoundPool.

MediaPlayer se usa para reproducir archivos de audio completos como m√∫sica o clips largos (mp3, ogg, wav). Es f√°cil de usar, pero puede tener algo de retardo en sonidos cortos. Ejemplo:

MediaPlayer mp = MediaPlayer.create(context, R.raw.sonido);
mp.start();

SoundPool es ideal para reproducir muchos efectos cortos (como disparos o clics) con baja latencia. Carga los sonidos una vez y los puede tocar muchas veces r√°pidamente.
Ejemplo:

SoundPool sp = new SoundPool.Builder().setMaxStreams(5).build();
int sonidoId = sp.load(context, R.raw.click, 1);
sp.play(sonidoId, 1, 1, 1, 0, 1);
Los archivos deben ir en la carpeta res/raw/, con nombres en min√∫sculas y sin caracteres especiales. Los formatos recomendados son .ogg y .wav.

--------------------------------------------------------------------------------------------------------------------
üì±Calidad de sensores en Android y su impacto en apps
En Android, a diferencia de iOS, hay una gran variedad de fabricantes, como Samsung, Xiaomi, Motorola, etc. Cada uno utiliza sensores distintos (como aceler√≥metros, giroscopios, sensores de proximidad, etc.) de diferentes calidades y proveedores. Normalmente todos los sensores se basan en la clase Sensor y SensorManager y se utilizan todos igual por lo que no tiene caso ver la mayoria o todos de estos, lo que cambia en estos son los datos que te arrojan

Esto genera un gran desaf√≠o para los desarrolladores, porque:

Un sensor puede ser muy preciso en un celular de gama alta, pero lento o impreciso en uno de gama baja.Algunos sensores pueden no estar disponibles en todos los dispositivos. La calibraci√≥n var√≠a, lo que afecta c√≥mo se comporta tu app, especialmente en apps de deporte, navegaci√≥n, realidad aumentada, etc.

üí° Por eso, una app que usa sensores puede funcionar perfecto en un modelo y mal en otro, incluso siendo la misma versi√≥n de Android. Siempre conviene probar en varios dispositivos reales o al menos simular diferencias con el emulador.
------------------------------------------------------------------------------------------------------------------------

üí°üí°üí°  si nosotros abrimos el emulador y vemos el apartado de sensores notaremos distintos elementos estos son:

üî∏ Aceler√≥metro (Accelerometer - m/s¬≤): mide la aceleraci√≥n total que act√∫a sobre el dispositivo, en las tres dimensiones del espacio (eje X, Y y Z). Esta aceleraci√≥n incluye tanto la que produce el movimiento del dispositivo como la aceleraci√≥n causada por la gravedad. Por eso, si el celular est√° en reposo, el valor que aparece es la gravedad (aproximadamente 9.81 m/s¬≤) en el eje que apunta hacia abajo. Este sensor se usa para detectar gestos como agitar el tel√©fono, contar pasos o cambiar la orientaci√≥n del dispositivo (como girar la pantalla autom√°ticamente).

üî∏ Giroscopio (Gyroscope - rad/s): mide la velocidad angular, es decir, cu√°nto y qu√© tan r√°pido gira el dispositivo alrededor de cada eje. A diferencia del aceler√≥metro, el giroscopio no mide fuerza, sino rotaci√≥n.
Es √∫til en aplicaciones que requieren precisi√≥n al detectar giros, como videojuegos, realidad aumentada (AR), estabilizaci√≥n de c√°mara o navegaci√≥n por gestos. Este sensor complementa al aceler√≥metro para obtener una orientaci√≥n m√°s precisa.

üî∏ Magnet√≥metro (Magnetometer - ŒºT): Este sensor mide la intensidad y direcci√≥n del campo magn√©tico alrededor del dispositivo. En la mayor√≠a de los casos, sirve como una br√∫jula digital que indica el norte magn√©tico.
Tambi√©n puede detectar campos magn√©ticos cercanos (por ejemplo, de imanes o componentes electr√≥nicos), y por eso puede tener interferencias. Es clave en apps de navegaci√≥n, mapas o br√∫julas, y tambi√©n se combina con otros sensores para calcular la posici√≥n espacial.

üî∏ Rotaci√≥n (Rotation): Este valor indica la orientaci√≥n actual de la pantalla del dispositivo con respecto a su posici√≥n f√≠sica: Puede ser ROTATION_0 (vertical normal), ROTATION_90 (horizontal girada a la derecha), ROTATION_180 (invertida) o ROTATION_270 (girada a la izquierda). Android lo usa para adaptar la interfaz seg√∫n c√≥mo el usuario sostiene el dispositivo.

üîπ Relaci√≥n entre los sensores: Estos sensores suelen combinarse (por medio de un sensor de fusi√≥n) para obtener datos m√°s precisos, como la orientaci√≥n absoluta del dispositivo. El aceler√≥metro, giroscopio y magnet√≥metro, usados juntos, permiten detectar con alta precisi√≥n si un celular se inclina, gira o se mueve.

üîπ Importancia en diferentes tel√©fonos: No todos los tel√©fonos Android tienen sensores de la misma calidad ni calibraci√≥n. Algunos sensores pueden ser m√°s precisos, otros m√°s lentos o sensibles al ruido. Esto significa que una aplicaci√≥n puede comportarse de forma distinta en diferentes dispositivos, afectando juegos, br√∫julas, apps de salud o cualquier app que dependa de movimientos. Por eso, los desarrolladores deben programar de forma adaptable, usando validaciones, filtros o alternativas cuando un sensor no est√© presente o funcione mal.

Esas medidas que ves son valores que provienen de los sensores f√≠sicos del dispositivo Android, espec√≠ficamente del aceler√≥metro, giroscopio, magnet√≥metro y orientaci√≥n de pantalla. Te explico brevemente qu√© significa cada grupo:
-------------------------------------------------------------------------------------------------------------------------
 los sensores adicionales m√°s comunes en Android:

üîπ Sensor de luz: Mide la intensidad de luz ambiental (en lux). Se usa principalmente para ajustar autom√°ticamente el brillo de la pantalla y ahorrar bater√≠a.

üîπ Sensor de proximidad: Detecta si un objeto est√° cerca del dispositivo (como la oreja durante una llamada). Sirve para apagar la pantalla cuando te acerc√°s al tel√©fono para evitar toques accidentales.

üîπ Sensor de temperatura y humedad: Algunos dispositivos avanzados los tienen para medir el clima local o condiciones ambientales. No son comunes.

üîπ Bar√≥metro: Mide la presi√≥n atmosf√©rica. Ayuda a mejorar la precisi√≥n del GPS en altitud y se puede usar en apps meteorol√≥gicas o deportivas.

üîπ Sensor de huellas digitales: Detecta patrones √∫nicos de tu huella dactilar. Se usa para seguridad y autenticaci√≥n (desbloquear el dispositivo, validar pagos, etc.).

üîπ Sensor de ritmo card√≠aco, ox√≠geno, etc: Disponibles en dispositivos especializados o wearables. Se usan para monitorizaci√≥n de salud (frecuencia card√≠aca, SpO‚ÇÇ, etc.).

üîπ Sensor de paso (Step Counter / Detector):
Cuenta o detecta pasos del usuario. Se usa en apps de fitness o salud sin necesidad de usar el GPS.

Estos sensores pueden o no estar presentes seg√∫n el modelo y gama del dispositivo, y por eso no todas las apps se comportan igual en todos los tel√©fonos.
-------------------------------------------------------------------------------------------------------------------------
