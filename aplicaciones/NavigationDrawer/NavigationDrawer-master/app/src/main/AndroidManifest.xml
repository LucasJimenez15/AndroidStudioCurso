<?xml version="1.0" encoding="utf-8"?>
<!-- Esta lÃ­nea define que el archivo es XML y que usarÃ¡ codificaciÃ³n UTF-8. -->

<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- Este es el nodo raÃ­z obligatorio en toda app Android.
         Define el espacio de nombres XML que se usarÃ¡ para referenciar atributos especÃ­ficos de Android. -->

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">

        <!-- ðŸŸ¢ <application> define propiedades globales de la app, como:
             - el Ã­cono que se mostrarÃ¡ en el dispositivo
             - el nombre que aparece debajo del Ã­cono
             - el tema visual por defecto
             - si permite respaldos automÃ¡ticos (allowBackup)
             - si soporta escritura de derecha a izquierda (supportsRtl) -->

        <activity
            android:name="com.cursoandroid.navigationdrawer.MainActivity"
            android:exported="true"
            android:label="@string/app_name"
            android:theme="@style/AppTheme.NoActionBar">

            <!-- ðŸŸ  <activity> define una pantalla (Activity) dentro de la app.
                 Esta es la clase Java que se ejecuta al abrir la app.
                 El atributo exported="true" indica que puede ser lanzada desde fuera de la app,
                 algo obligatorio en Android 12+ para actividades que inician con un intent-filter. -->

            <intent-filter>
                <!-- ðŸ”· Este bloque indica que esta actividad serÃ¡ el "punto de entrada" de la app. -->
                <action android:name="android.intent.action.MAIN" />
                <!-- Esto define que esta actividad es la principal (Main). -->

                <category android:name="android.intent.category.LAUNCHER" />
                <!-- Esta lÃ­nea especifica que la actividad debe aparecer en el lanzador de apps (es decir, en el menÃº del telÃ©fono). -->
            </intent-filter>
        </activity>
    </application>

</manifest>

<!--ðŸ“Œ RESUMEN Y DETALLES IMPORTANTES
âœ… Â¿QuÃ© funciÃ³n cumple el AndroidManifest.xml?
Declara los componentes de la app: actividades (Activity), servicios (Service), receptores (BroadcastReceiver), etc.
Indica los permisos necesarios (aunque este ejemplo no los tiene).
Define cuÃ¡l es la actividad principal, es decir, la primera pantalla que se abre cuando el usuario toca el Ã­cono de la app.

ðŸ”„ Â¿QuÃ© pasaba antes?
En versiones antiguas de Android, muchas configuraciones se hacÃ­an en cÃ³digo Java.
Eso dificultaba la detecciÃ³n automÃ¡tica de componentes y requerÃ­a mucha lÃ³gica repetitiva.
Hoy en dÃ­a, el Manifest permite que el sistema sepa cÃ³mo manejar los componentes de la app desde el arranque, incluso sin abrir clases.

ðŸ†• A partir de Android 12:
Es obligatorio declarar android:exported="true" o "false" en las actividades que tengan un <intent-filter>, como es el caso aquÃ­.
Esto ayuda a mejorar la seguridad del sistema operativo, evitando que componentes internos puedan ser lanzados sin control. -->